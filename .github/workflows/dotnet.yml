# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Release

on: push

jobs:
  Build-Python:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
    - uses: abatilo/actions-poetry@v2
    - name: Package xls converter
      run: |
        cd xls-converter/ &&\
        poetry build -f wheel
    - name: Archive production artifacts
      uses: actions/upload-artifact@v4
      with:
        name: xls-converter
        path: xls-converter/dist
  Build-Dot-Net:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        program: [Csv2FhirMapping, TestDataClient]
        os: [win, linux]
        arch: [x64, arm64]
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'true'
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Build ${{ matrix.program }} on ${{ matrix.os }}
      run: |
        dotnet publish Sparked.${{ matrix.program }}/Sparked.${{ matrix.program }}.csproj \
               --arch ${{ matrix.arch }} \
               --os ${{ matrix.os }} \
               --configuration Release \
               -p:PublishSingleFile=True \
               --framework net80 \
               --self-contained true \
               --output "Sparked.${{ matrix.program }}-${{ matrix.os }}-${{ matrix.arch }}Output"
    - name: Archive production artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.program }}-${{ matrix.os }}-${{ matrix.arch }}-binaries
        path: |
          Sparked.${{ matrix.program }}-${{ matrix.os }}-${{ matrix.arch }}Output
  Test-Dot-Net:
    needs:
    - Build-Dot-Net
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: Csv2FhirMapping-linux-x64-binaries
        path: /tmp
    - name: Prepare to run
      run: chmod +x /tmp/Csv2Fhir
    - name: Run converter
      run: |
        cd Sparked.Csv2FhirMapping/test &&
        /tmp/Csv2Fhir Medication ./medication.csv ./output/
    - name: Check output
      id: git-diff-action
      run: echo "changed=$(git status --porcelain=v1 2>/dev/null | wc -l | tr -d '[:space:]')" >> "$GITHUB_OUTPUT"
    - if: steps.git-diff-action.outputs.changed != '0'
      name: Fail
      run: git diff | cat && exit -1
  Release:
    if: contains(github.ref, 'tags/v')
    needs:
    - Test-Dot-Net
    - Build-Python
    runs-on: ubuntu-latest
    steps:
    - name: Create release
      uses: softprops/action-gh-release@v2
  Publish-Python:
    if: contains(github.ref, 'tags/v')
    needs: Release
    runs-on: ubuntu-latest
    steps:
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: xls-converter
        path: .
    - name: Archive
      run: zip -r xls-converter.zip .
    - name: Upload archive
      uses: softprops/action-gh-release@v2
      with:
          files: xls-converter.zip
  Publish-Dot-Net:
    if: contains(github.ref, 'tags/v')
    needs: Release
    strategy:
      matrix:
        program: [Csv2FhirMapping, TestDataClient]
        os: [win, linux]
        arch: [x64, arm64]
    runs-on: ubuntu-latest
    steps:
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: ${{ matrix.program }}-${{ matrix.os }}-${{ matrix.arch }}-binaries
        path: ${{ matrix.program }}-${{ matrix.os }}-${{ matrix.arch }}-binaries
    - name: Archive
      run: zip -r ${{ matrix.program }}-${{ matrix.os }}-${{ matrix.arch }}.zip ${{ matrix.program }}-${{ matrix.os }}-${{ matrix.arch }}-binaries
    - name: Upload archive
      uses: softprops/action-gh-release@v2
      with:
          files: ${{ matrix.program }}-${{ matrix.os }}-${{ matrix.arch }}.zip
